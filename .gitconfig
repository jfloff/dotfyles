[include]
    # https://github.com/blog/180-local-github-config
    # For username / creds / etc
    path = ~/.gitconfig.private

[user]
    name = Jo√£o Ferreira Loff
    email = jfloff@gmail.com

[github]
    user = jfloff

[color]
    # ui = true is a superset of all the more specific color options
    #   as documented at http://book.git-scm.com/5_customizing_git.html
    # When set to always, always use colors in all git commands which are capable of colored output.
    # When false, never. When set to true or auto, use colors only when the output is to the terminal.
    # When more specific variables of color.* are set, they always take precedence over this setting.
    # Defaults to false.
    ui = auto
    # diff = auto
    # status = auto
    # branch = auto

[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold
[color "status"]
    added = yellow
    changed = green
    untracked = cyan

[core]
    editor = code --wait
    excludesfile = ~/.gitignore
    # line endings
    # force LF during add
    autocrlf = false
    # prevent crlf (then you will have to deal with the problem -- dos2unix, etc)
    safecrlf = true
    # Make `git rebase` safer on OS X
	# More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
	trustctime = false
    # To fix scrolling
    # https://askubuntu.com/a/803998
	pager = less -+FX
    # ignores chmod file modes
	fileMode = false

[alias]
    # most commonly used
    co = checkout
    c = commit
    cm = commit -m
    cam = commit -a -m
    d = diff --color-words
    ph = push
    pl = pull
    st = status
    listconf = config --global --list
    undo = reset --soft HEAD^
    # View abbreviated SHA, description, and history graph of the latest 20 commits
	log = log --pretty=oneline --graph --abbrev-commit
	# Show verbose output about tags, branches or remotes
	tags = tag -l
	branches = branch -a
	remotes = remote -v
	# Remove branches that have already been merged with master
	branch-clean = "!git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d"

#Enable the recording of resolved conflicts, so that identical hunks can be resolved automatically later on
[rerere]
    enabled = 1

[merge]
    # Always show a diffstat at the end of a merge
    stat = true
    log = true

[push]
	default = current

[credential]
    helper = osxkeychain

[hub]
    protocol = https

[filter "lfs"]
    clean = git-lfs clean %f
    smudge = git-lfs smudge %f
    required = true

[url "https://"]
    insteadOf = git://

[pull]
    rebase = true
	default = current

[rebase]
    autoStash = true
